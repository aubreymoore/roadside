# Reduce frame rate to 3 FPS for each video. The original video is renamed to *_oriiginal.mp4
logging.info('Reducing frame rates.')
for video_path in glob.glob(f'{videodatedir}/{videodate}_??????.mp4'):
new_path = video_path.replace('.mp4', 'original.mp4')
if os.path.exists(new_path):
    logging.info(f'{new_path} alreadyexists. Skipping FPS reduction.')
else:
    os.rename(video_path, new_path)
    logging.info(f'{video_path} --> {new_path}')
    command = f'ffmpeg -i {new_path} -filter:v fps=fps=3 {video_path}'
    output = subprocess.run(command, shell=True)
    logging.info(f'output:{output}')
logging.info('Finished frame rate reduction.')



# Georeference video frames
            command = f'python3 georef.py --date {videodate} --data-dir {datadir} --db-path {dbpath}'
            logging.info(command)
            output = subprocess.run(command, shell=True)
            logging.info(output)


On other Lambda desktop:

cd Desktop/old_CRB-Damage-Detection
workon py38
python3.6 demo.py

On other Lambda desktop, CVAT runs at:

Open in Chromium:

https://localhost:8080

